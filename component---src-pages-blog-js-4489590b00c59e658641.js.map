{"version":3,"sources":["webpack:///./src/components/Link.js","webpack:///./src/core/Card.js","webpack:///./src/pages/blog.js","webpack:///./src/components/seo.js"],"names":["Link","_ref","children","to","activeClassName","other","objectWithoutPropertiesLoose_default","test","react_default","a","createElement","gatsby_browser_entry","Object","assign","href","StyledCard","styled","div","withConfig","displayName","componentId","CardHeader","Card","title","ListContainer","posed","enter","staggerChildren","exit","staggerDirection","Item","article","x","opacity","transition","duration","StyledItem","CardLink","StyeldP","p","BlogIndex","render","_this$props","this","props","data","posts","location","allMarkdownRemark","edges","Fragment","seo","keywords","initialPose","pose","Grid_default","container","spacing","map","node","frontmatter","fields","slug","item","xs","sm","key","core_Card","date","dangerouslySetInnerHTML","__html","excerpt","React","Component","pageQuery","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"wLA0BeA,EArBF,SAAAC,GAAiD,IAA9CC,EAA8CD,EAA9CC,SAAUC,EAAoCF,EAApCE,GAAIC,EAAgCH,EAAhCG,gBAAoBC,EAAYC,IAAAL,EAAA,qCAO5D,MAHiB,YAAYM,KAAKJ,GAK9BK,EAAAC,EAAAC,cAACC,EAAA,KAADC,OAAAC,OAAA,CAAYV,GAAIA,EAAIC,gBAAiBA,GAAqBC,GACvDH,GAKLM,EAAAC,EAAAC,cAAA,IAAAE,OAAAC,OAAA,CAAGC,KAAMX,GAAQE,GACdH,6BClBDa,EAAaC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,mBAAAC,YAAA,eAAGJ,CAAH,kbAwBVK,EAAaL,IAAOC,IAAVC,WAAA,CAAAC,YAAA,mBAAAC,YAAA,eAAGJ,CAAH,qCAYDM,EAPF,SAAArB,GAAA,IAAGsB,EAAHtB,EAAGsB,MAAOrB,EAAVD,EAAUC,SAAV,OACXM,EAAAC,EAAAC,cAACK,EAAD,KACEP,EAAAC,EAAAC,cAACW,EAAD,KAAaE,GACZrB,0DCxBL,IAAMsB,EAAgBC,IAAMR,IAAI,CAC9BS,MAAO,CACLC,gBAAiB,IAEnBC,KAAM,CAAED,gBAAiB,GAAIE,kBAAmB,KAG5CC,EAAOL,IAAMM,QAAQ,CACzBL,MAAO,CAAEM,EAAG,EAAGC,QAAS,GACxBL,KAAM,CAAEI,EAAG,GAAIC,QAAS,EAAGC,WAAY,CAAEC,SAAU,QAE/CC,EAAapB,YAAOc,GAAVZ,WAAA,CAAAC,YAAA,mBAAAC,YAAA,YAAGJ,CAAH,yBAGVqB,EAAWrB,YAAOhB,GAAVkB,WAAA,CAAAC,YAAA,iBAAAC,YAAA,YAAGJ,CAAH,qCAKRsB,EAAUtB,IAAOuB,EAAVrB,WAAA,CAAAC,YAAA,gBAAAC,YAAA,YAAGJ,CAAH,mDAKPwB,4FACJC,OAAA,WAAS,IAAAC,EACoBC,KAAKC,MAAxBC,EADDH,EACCG,KACFC,GAFCJ,EACOK,SACAF,EAAKG,kBAAkBC,OAErC,OACEzC,EAAAC,EAAAC,cAACF,EAAAC,EAAMyC,SAAP,KACE1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CACE5B,MAAM,YACN6B,SAAU,CAAC,OAAQ,SAAU,aAAc,WAE7C5C,EAAAC,EAAAC,cAAA,kDAEAF,EAAAC,EAAAC,cAACc,EAAD,CAAe6B,YAAY,OAAOC,KAAK,SACrC9C,EAAAC,EAAAC,cAAC6C,EAAA9C,EAAD,CAAM+C,WAAS,EAACC,QAAS,GACtBX,EAAMY,IAAI,SAAAzD,GAAc,IAAX0D,EAAW1D,EAAX0D,KACNpC,EAAQoC,EAAKC,YAAYrC,OAASoC,EAAKE,OAAOC,KACpD,OACEtD,EAAAC,EAAAC,cAAC6C,EAAA9C,EAAD,CAAMsD,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,IAAKP,EAAKE,OAAOC,MACzCtD,EAAAC,EAAAC,cAAC0B,EAAD,KACE5B,EAAAC,EAAAC,cAAC2B,EAAD,CAAUlC,GAAE,IAAMwD,EAAKE,OAAOC,MAC5BtD,EAAAC,EAAAC,cAACyD,EAAD,CAAM5C,MAAOA,GACXf,EAAAC,EAAAC,cAAA,aAAQiD,EAAKC,YAAYQ,MACzB5D,EAAAC,EAAAC,cAAC4B,EAAD,CACE+B,wBAAyB,CAAEC,OAAQX,EAAKY,wBAxB1CC,IAAMC,WAyCjBC,GAFElC,YAEO,uHCvEtB,SAASmC,EAAT1E,GAA2D,IAA5C2E,EAA4C3E,EAA5C2E,YAAaC,EAA+B5E,EAA/B4E,KAAMC,EAAyB7E,EAAzB6E,KAAM1B,EAAmBnD,EAAnBmD,SAAU7B,EAAStB,EAATsB,MAChD,OACEwD,EAAAtE,EAAAC,cAACsE,EAAA,YAAD,CACEC,MAAOC,EACPzC,OAAQ,SAAAI,GACN,IAAMsC,EACJP,GAAe/B,EAAKuC,KAAKC,aAAaT,YACxC,OACEG,EAAAtE,EAAAC,cAAC4E,EAAA7E,EAAD,CACE8E,eAAgB,CACdV,QAEFtD,MAAOA,EACPiE,cAAa,QAAU3C,EAAKuC,KAAKC,aAAa9D,MAC9CuD,KAAM,CACJ,CACEW,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASnE,GAEX,CACEoE,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAS7C,EAAKuC,KAAKC,aAAaO,QAElC,CACEH,KAAI,gBACJC,QAASnE,GAEX,CACEkE,KAAI,sBACJC,QAASP,IAGVU,OACCzC,EAAS0C,OAAS,EACd,CACEL,KAAI,WACJC,QAAStC,EAAS2C,KAAT,OAEX,IAELF,OAAOf,MAtDlBjC,KAAAmD,IA8DJrB,EAAIsB,aAAe,CACjBpB,KAAI,KACJC,KAAM,GACN1B,SAAU,IAGZuB,EAAIuB,UAAY,CACdtB,YAAauB,IAAUC,OACvBvB,KAAMsB,IAAUC,OAChBtB,KAAMqB,IAAUE,MAChBjD,SAAU+C,IAAUG,QAAQH,IAAUC,QACtC7E,MAAO4E,IAAUC,OAAOG,YAGX5B,MAEf,IAAMO,EAAY","file":"component---src-pages-blog-js-4489590b00c59e658641.js","sourcesContent":["import React from \"react\";\nimport { Link as GatsbyLink } from \"gatsby\";\n\n// Since DOM elements <a> cannot receive activeClassName,\n// destructure the prop here and pass it only to GatsbyLink\nconst Link = ({ children, to, activeClassName, ...other }) => {\n  // Tailor the following test to your environment.\n  // This example assumes that any internal link (intended for Gatsby)\n  // will start with exactly one slash, and that anything else is external.\n  const internal = /^\\/(?!\\/)/.test(to);\n\n  // Use Gatsby Link for internal links, and <a> for others\n  if (internal) {\n    return (\n      <GatsbyLink to={to} activeClassName={activeClassName} {...other}>\n        {children}\n      </GatsbyLink>\n    );\n  }\n  return (\n    <a href={to} {...other}>\n      {children}\n    </a>\n  );\n};\n\nexport default Link;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledCard = styled.div`\n  background: inherit;\n  padding: 20px;\n  box-shadow: rgba(25, 17, 34, 0.05) 0px 3px 10px;\n  border: 1px solid rgba(0, 0, 0, 0.125);\n  border-radius: 0.25rem;\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s,\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s,\n    padding 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n\n  transition: 0.3s;\n\n  :hover {\n    transform: translateY(-4px);\n    box-shadow: rgba(25, 17, 34, 0.1) 0px 10px 42px;\n    background: linear-gradient(\n      to right,\n      #f09819,\n      #ff512f\n    ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n  }\n`;\n\nconst CardHeader = styled.div`\n  font-size: 32px;\n  font-weight: 700;\n`;\n\nconst Card = ({ title, children }) => (\n  <StyledCard>\n    <CardHeader>{title}</CardHeader>\n    {children}\n  </StyledCard>\n);\n\nexport default Card;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport _ from \"lodash\";\nimport SEO from \"../components/seo\";\nimport Link from \"../components/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"../core/Card\";\nimport styled from \"styled-components\";\nimport posed from \"react-pose\";\nimport Layout from \"../components/Layout\";\n\nconst ListContainer = posed.div({\n  enter: {\n    staggerChildren: 50\n  },\n  exit: { staggerChildren: 20, staggerDirection: -1 }\n});\n\nconst Item = posed.article({\n  enter: { x: 0, opacity: 1 },\n  exit: { x: 50, opacity: 0, transition: { duration: 200 } }\n});\nconst StyledItem = styled(Item)`\n  background: #20232f;\n`;\nconst CardLink = styled(Link)`\n  :hover {\n    color: #ffff !important;\n  }\n`;\nconst StyeldP = styled.p`\n  font-size: 16px;\n  font-weight: 300;\n  margin: 10px 0;\n`;\nclass BlogIndex extends React.Component {\n  render() {\n    const { data, location } = this.props;\n    const posts = data.allMarkdownRemark.edges;\n\n    return (\n      <React.Fragment>\n        <SEO\n          title=\"All posts\"\n          keywords={[\"blog\", \"gatsby\", \"javascript\", \"react\"]}\n        />\n        <h1>The notes from the books I have read</h1>\n\n        <ListContainer initialPose=\"exit\" pose=\"enter\">\n          <Grid container spacing={8}>\n            {posts.map(({ node }) => {\n              const title = node.frontmatter.title || node.fields.slug;\n              return (\n                <Grid item xs={12} sm={6} key={node.fields.slug}>\n                  <StyledItem>\n                    <CardLink to={`/${node.fields.slug}`}>\n                      <Card title={title}>\n                        <small>{node.frontmatter.date}</small>\n                        <StyeldP\n                          dangerouslySetInnerHTML={{ __html: node.excerpt }}\n                        />\n                      </Card>\n                    </CardLink>\n                  </StyledItem>\n                </Grid>\n              );\n            })}\n          </Grid>\n        </ListContainer>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}