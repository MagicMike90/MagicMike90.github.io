{"data":{"site":{"siteMetadata":{"title":"Michael Blog","author":"Michael Luo"}},"markdownRemark":{"id":"107821a6-ea2d-5c28-9f88-f271348990f5","excerpt":"Introduction A diagram of AI in computer science Rule-based system VS Machine learning The logic required to make a decision is specific to a single domain andâ€¦","html":"<h1>Introduction</h1>\n<h2>A diagram of AI in computer science</h2>\n<p><img src=\"https://github.com/MagicMike90/Notes/blob/master/Machine-Learning/ai_explaination.jpg\" alt=\"alt text\" title=\"A diagram of AI category1\"></p>\n<h2>Rule-based system VS Machine learning</h2>\n<ol>\n<li>The logic required to make a decision is specific to a single domain and task. Changing the task even slightly might require a rewrite of the whole system.</li>\n<li>Designing rules requires a deep understanding of how a decision should be made by a human expert.</li>\n</ol>\n<p>Machine learning summarized in four categories.</p>\n<ul>\n<li>Predictive learning: comprises two kinds of tasks where we aim to either predict a continuous valued phenomenon (like the future location of a celestial body), or distinguish between distinct kings of things (like different faces in an image)</li>\n<li>Feature design: A broad set of engineering and mathematical tools which are crucial to the successful performance of predictive learning models in practice.</li>\n<li>Function approximation: It is employed when we know too little abut a dataset to produce proper features ourselves (and therefore must learn them strictly from the data itself).</li>\n<li>Numerical optimization powers the first three and is the engine that makes machine learning run in practice.</li>\n</ul>\n<h2>Cost function</h2>\n<p>One of the key ingredients of supervised machine learning algorithms is to define\nan objective function that is to be optimized during the learning process. This\nobjective function is often a cost function that we want to minimize.</p>\n<h2>Predictive learning problems</h2>\n<ol>\n<li>Regression:</li>\n<li>Classification: The key difference between the two is that instead of predicting a continuous-valued output (e.g., share price blood pressure, etc.), with classification what we aim at predicting takes on discrete values or classes.</li>\n</ol>\n<h2>Three types of machine learning</h2>\n<ul>\n<li>\n<p>Supervised learning (making predictions about the future):</p>\n<ul>\n<li><strong>supervised</strong> refers to a set of samples where the desired output signals (lables ) are already known.</li>\n<li>There are two sub categories:</li>\n<li>\n<p><strong>classification</strong>: the goal is to predict the categorical class labels of new instances based on the pas observations, which is a choice from a predfined list of possibilities.</p>\n<ul>\n<li><em>i.e. distinguish spam and non-spam email</em></li>\n</ul>\n</li>\n<li>\n<p><strong>regression</strong>: for predicting continuous outcomes, given a number of <em>predictor</em> ( explanatory) variables and a continuous response variable (outcome), and we try to find a relationship between those variables that allows us to predict an outcome.</p>\n<ul>\n<li><em>i.e. predict a relationship between the time spent studying for the test and the final scores</em></li>\n</ul>\n</li>\n<li>examples:</li>\n<li>Identifying the ZIP code from handwritten digits on an envelope.</li>\n<li>Determining whether or not a tumor is benign based on a medical image.</li>\n<li>Detecting fraudulent activity in credit card transactions</li>\n</ul>\n</li>\n</ul>\n<p>A easy way to distinguish between classifcation and regression tasks is to ask whether there is some kind of continuity in the output.</p>\n<ul>\n<li>\n<p>Unsupervised learning (Discovering hidden structures):</p>\n<ul>\n<li>In uservised learning, we know the right answer beforehand when we train our model, and in reinforcement learning, we define a measure of reward for particular actions by the agent. In unsupervised learning, however, we are dealling with unlabeled data or data of unkow structure.</li>\n<li><strong>cluster</strong>: is an exploratory data analysis technique that allows us to organize a pile of information into meaningful subgroups (<em>clusters</em>) without having any prior knowledge of their group menmeberships.</li>\n<li><em>i.e.</em> it allows marketers to discover customer groups based on their interests in order to develop distinct mareting programs</li>\n<li><strong>dimensionality reduction</strong></li>\n<li>It is a commonly used approach in feature preprocessing to remove noise from data, which can also degrade the predictive performance of certain algorithms, and compress the data onto a smaller dimensional subspace while retaining most of the relevant information.</li>\n<li>Examples:</li>\n<li>Identifying topics in a set of blog posts.</li>\n<li>Segmenting customers into groups with similar preferences.</li>\n<li>Detecting abnormal access patterns to a website.</li>\n</ul>\n</li>\n</ul>\n<p>unsupervised algorithms are used offten in an explortory setting, when a data scientist wants to understand the data better, rather than as part of a larger automatic system. Another common application for unsupervised algorithms is as a preprocessing step for supervised algorithms.</p>\n<ul>\n<li>\n<p>reinforcement learning (Solving interactive problems):</p>\n<ul>\n<li>The goal is to develop a system (<em>agent</em>) that improves its performance based on interactions with the <em>enviroment</em>.</li>\n<li><em>i.e. chess engine</em>, the agent decides upon a series of moves depending on the state of the board (the enviroment) and reward can be difned as <em>win</em> or <em>lose</em> at the end of the game</li>\n</ul>\n</li>\n</ul>\n<h2>Predictive modeling</h2>\n<ul>\n<li>\n<p>Preprocessing</p>\n<ul>\n<li>Feature extraction and scalling</li>\n<li>Feature selection</li>\n<li>Dimensionality reduction</li>\n<li>sampling</li>\n</ul>\n</li>\n<li>Learning</li>\n<li>Evaluation</li>\n<li>Prediction</li>\n</ul>\n<h2>Feature python libaries</h2>\n<ul>\n<li>NumPy</li>\n<li>SciPy</li>\n<li>scikit-learn</li>\n<li>pandas</li>\n<li>matplotlib</li>\n</ul>","frontmatter":{"title":"Introduction of Machine Learning!","date":"January 31, 2019"}}},"pageContext":{"slug":"machine-learning-intro","previous":{"fields":{"slug":"machine-learning-model-evaluation-hyperparameter-tuning"},"frontmatter":{"title":"Model Evaluation Hyperparameter Tuning notest!"}},"next":{"fields":{"slug":"machine-learning-embedding-model-to-webapp"},"frontmatter":{"title":"Embedding a machine learning model to web application Notes!"}}}}