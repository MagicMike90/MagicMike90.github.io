{"data":{"site":{"siteMetadata":{"title":"Michael Blog","author":"Michael Luo"}},"markdownRemark":{"id":"7bc9263a-b980-53af-b115-2c4262dd4e6b","excerpt":"Clean vagrant build vagrant global-status —prune - Prunes invalid entries from the list. This is much more time consuming than simply listing the entries. Setup…","html":"<h2>Clean vagrant build</h2>\n<p>vagrant global-status —prune - Prunes invalid entries from the list. This is much more time consuming than simply listing the entries.</p>\n<h1>Setup vagrant with docker</h1>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">config<span class=\"token punctuation\">.</span>vm<span class=\"token punctuation\">.</span>box <span class=\"token operator\">=</span> <span class=\"token string\">\"ubuntu/trusty64\"</span></code></pre></div>\n<h1>Set vagrant up default box</h1>\n<p>By passing <code class=\"language-text\">primary</code> flag to the the machine definition to start the machine as default machine when passing <code class=\"language-text\">vigrant up</code></p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\"># -*- mode: ruby -*-</span>\n<span class=\"token comment\"># vi: set ft=ruby :</span>\n<span class=\"token constant\">VAGRANTFILE_API_VERSION</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"2\"</span>\n    <span class=\"token constant\">Vagrant</span><span class=\"token punctuation\">.</span><span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VAGRANTFILE_API_VERSION</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>config<span class=\"token operator\">|</span>\n        config<span class=\"token punctuation\">.</span>vm<span class=\"token punctuation\">.</span>define <span class=\"token string\">\"web\"</span><span class=\"token punctuation\">,</span> primary<span class=\"token punctuation\">:</span> <span class=\"token keyword\">true</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>web<span class=\"token operator\">|</span>\n        web<span class=\"token punctuation\">.</span>vm<span class=\"token punctuation\">.</span>box <span class=\"token operator\">=</span><span class=\"token string\">\"puppetlabs/ubuntu-14.04-32-nocm\"</span>\n    <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>We’ll need to install a service that will run on port 80 of the guest machine. To do\nthis, we’ll add a simple provisioning command. The complete Vagrantfile now looks\nlike this:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">web<span class=\"token punctuation\">.</span>vm<span class=\"token punctuation\">.</span>provision <span class=\"token string\">\"shell\"</span><span class=\"token punctuation\">,</span> inline<span class=\"token punctuation\">:</span> <span class=\"token string\">\"apt-get install -y nginx\"</span></code></pre></div>\n<p>With the auto_correct option, Vagrant will first attempt to connect to the specified\nport (in this example, 8888), then fail over to a different port if the one specified is being\nused by another process.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">web<span class=\"token punctuation\">.</span>vm<span class=\"token punctuation\">.</span>network <span class=\"token string\">\"forwarded_port\"</span><span class=\"token punctuation\">,</span> guest<span class=\"token punctuation\">:</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span> host<span class=\"token punctuation\">:</span><span class=\"token number\">8888</span><span class=\"token punctuation\">,</span> auto_correct<span class=\"token punctuation\">:</span> <span class=\"token keyword\">true</span></code></pre></div>\n<p>To enable the GUI, we will need to add a provider-specific block to the configuration.\nIn this case, the provider is “virtualbox”.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\"># -*- mode: ruby -*-</span>\n<span class=\"token comment\"># vi: set ft=ruby :</span>\n<span class=\"token constant\">VAGRANTFILE_API_VERSION</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"2\"</span>\n<span class=\"token constant\">Vagrant</span><span class=\"token punctuation\">.</span><span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VAGRANTFILE_API_VERSION</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>config<span class=\"token operator\">|</span>\n    config<span class=\"token punctuation\">.</span>vm<span class=\"token punctuation\">.</span>box <span class=\"token operator\">=</span> <span class=\"token string\">\"chad-thompson/ubuntu-trusty64-gui\"</span> config<span class=\"token punctuation\">.</span>\n    vm<span class=\"token punctuation\">.</span>provider <span class=\"token string\">\"virtualbox\"</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>vbox<span class=\"token operator\">|</span>\n        vbox<span class=\"token punctuation\">.</span>gui <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span>\n    <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>synced_folder</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">web<span class=\"token punctuation\">.</span>vm<span class=\"token punctuation\">.</span>synced_folder <span class=\"token string\">\"vagrantsite/\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/opt/vagrantsite\"</span></code></pre></div>\n<p>This will link the <code class=\"language-text\">vagrantsite</code> directory we created in step 1 to the <code class=\"language-text\">/opt/vagrantsite</code> directory on the guest machine.</p>\n<h1>Ansible - is designed to execute commands using SSH</h1>\n<p>currently it is not supporting Windows</p>\n<p>installlation: </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> pip <span class=\"token function\">install</span> ansible</code></pre></div>\n<p>or for mac</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> ansible</code></pre></div>\n<h1>Vagrant newtwork</h1>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">config<span class=\"token punctuation\">.</span>vm<span class=\"token punctuation\">.</span>network <span class=\"token string\">\"private_network\"</span><span class=\"token punctuation\">,</span> ip<span class=\"token punctuation\">:</span> <span class=\"token string\">\"192.168.99.100\"</span></code></pre></div>\n<p>Add <code class=\"language-text\">web.local 192.168.99.100</code> to  <code class=\"language-text\">/etc/hosts</code>, The Vagrant machine can then be accessed using the <code class=\"language-text\">web.local</code> name address rather than a forwarded port address of something like <code class=\"language-text\">http://localhost:8080</code></p>\n<h2>Multiple machines</h2>\n<p>The ordering and overriding of provisioners and variables is especially important in\nmultimachine Vagrant environments. A multimachine Vagrantfile can specify global\nparameters (such as boxes or common provisioning tasks) that allow for individual\nmachines to override the global parameters</p>\n<h2>Important configuration</h2>\n<p><em>has_ssh</em> (boolean) - If true, then Vagrant will support SSH with the container. This allows vagrant ssh to work, provisioners, etc. This defaults to false.</p>\n<p><em>link</em> (method, string argument) - Link this container to another by name. The argument should be in the format of (name:alias). Example: docker.link(“db:db”). Note, if you are linking to another container in the same Vagrantfile, make sure you call vagrant up with the —no-parallel flag.</p>\n<h1>Vagrant with docker</h1>\n<p>The Docker provider does not require a Vagrant box. The config.vm.box setting is completely optional.</p>\n<p>A box can still be used and specified, however, to provide defaults. Because the Vagrantfile within a box is loaded as part of the configuration loading sequence, it can be used to configure the foundation of a development environment.</p>\n<p><strong>In general, however, you will not need a box with the Docker provider.</strong></p>\n<h1>Boot2docker</h1>\n<p>Boot2docker is an excellent project that spin up docker containers in a virtual machine when the hosts (i.e. OSX) don’t support LXC, but it may be not suitable for large applications. </p>\n<h3>box with docker provider</h3>\n<ul>\n<li>phusion/ubuntu-14.04-amd64</li>\n<li>hashicorp/boot2docker</li>\n</ul>\n<h3>host-vagrant:</h3>\n<ol>\n<li>Using ansible provision to install Docker onto Ubuntu</li>\n<li>Ensure Boot2Docker vm is also forward the same ports</li>\n</ol>\n<h2>Plugins</h2>\n<ul>\n<li>vagrant-notify-forwarder:\nBy default, this sets up <code class=\"language-text\">UDP port 29324</code> for port forwarding</li>\n</ul>\n<h2>Sync folder for docker containers in boot2docker</h2>\n<p>using <code class=\"language-text\">vm.synced_folder</code> to overide docker container volums</p>\n<h2>Webpack</h2>\n<p><code class=\"language-text\">watchOptions.poll</code> </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">poll: 1000 // Check for changes every second</code></pre></div>\n<p>Watching does not work with NFS and machines in VirtualBox.</p>\n<h2>nodemon</h2>\n<p><code class=\"language-text\">--legacy-watch</code> is needed to apply when using boot2docker to watch file changes</p>","frontmatter":{"title":"Vagrant Notes!","date":"January 31, 2019"}}},"pageContext":{"slug":"/DevOps/vagrant/","previous":{"fields":{"slug":"/Dotnet/README/"},"frontmatter":{"title":"Dotnet Notes!"}},"next":{"fields":{"slug":"/DevOps/docker/"},"frontmatter":{"title":"Docker Notes!"}}}}