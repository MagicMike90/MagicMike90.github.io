{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./src/components/seo.js","webpack:///./src/components/PostLayout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","react_pose__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","_components_PostLayout__WEBPACK_IMPORTED_MODULE_5__","PosedSection","posed","section","enter","staggerChildren","staggerDirection","StyledHeader","styled","header","withConfig","displayName","componentId","StyledContent","div","Title","h1","y","opacity","exit","StyledTitle","P","p","BlogPostTemplate","_ref","data","pageContext","location","post","markdownRemark","previous","next","a","createElement","initialPose","pose","title","frontmatter","description","excerpt","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","SEO","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","styled_components__WEBPACK_IMPORTED_MODULE_1__","_core_Header__WEBPACK_IMPORTED_MODULE_2__","Container","main","Footer","footer","PostLayout","children","Fragment","Date","getFullYear"],"mappings":"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","file":"component---src-templates-blog-post-js-0ce8a35bed834b7815c0.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport posed from 'react-pose';\nimport styled from 'styled-components';\nimport SEO from '../components/seo';\nimport PostLayout from '../components/PostLayout';\n\nconst PosedSection = posed.section({\n  enter: { staggerChildren: 50, staggerDirection: -1 },\n});\n\nconst StyledHeader = styled.header`\n  border-bottom-right-radius: 200px;\n  position: relative;\n  z-index: 1;\n  padding: 4rem 2rem;\n  background: #100e17;\n  color: #fff;\n`;\n\nconst StyledContent = styled.div`\n  padding: 4rem 2rem;\n`;\nconst Title = posed.h1({\n  enter: { y: 0, opacity: 1 },\n  exit: { y: 50, opacity: 0 },\n});\n\nconst StyledTitle = styled(Title)`\n  background: linear-gradient(to right, #f09819, #ff512f);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`;\nconst P = posed.p({\n  enter: { y: 0, opacity: 1 },\n  exit: { y: 50, opacity: 0 },\n});\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark;\n  const { previous, next } = pageContext;\n\n  return (\n    <PostLayout location={location}>\n      <PosedSection initialPose=\"exit\" pose=\"enter\">\n        <SEO title={post.frontmatter.title} description={post.excerpt} />\n        <StyledHeader>\n          <StyledTitle>{post.frontmatter.title}</StyledTitle>\n          <P>{post.frontmatter.date}</P>\n        </StyledHeader>\n\n        <StyledContent>\n          <P dangerouslySetInnerHTML={{ __html: post.html }} />\n        </StyledContent>\n        <hr />\n\n        <ul\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-between',\n            listStyle: 'none',\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ←\n                {' '}\n                {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title}\n                {' '}\n→\n              </Link>\n            )}\n          </li>\n        </ul>\n      </PosedSection>\n    </PostLayout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nfunction SEO({\n  description, lang, meta, keywords, title,\n}) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={(data) => {\n        const metaDescription = description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: 'twitter:title',\n                content: title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                    name: 'keywords',\n                    content: keywords.join(', '),\n                  }\n                  : [],\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Header from '../core/Header';\n\nconst Container = styled.main`\n  background: #fff;\n  color: #2e2f3e;\n`;\n\nconst Footer = styled.footer`\n  text-align: center;\n  width: 100%;\n  color: #ffffff;\n  padding: 15px;\n  display: 'block';\n`;\n\nconst PostLayout = ({ location, children }) => (\n  <React.Fragment>\n    <Header />\n    <Container>{children}</Container>\n    <Footer>\n©\n      {new Date().getFullYear()}\n      {' '}\nMichael Luo\n    </Footer>\n  </React.Fragment>\n);\n\nexport default PostLayout;\n"],"sourceRoot":""}