{"version":3,"sources":["webpack:///./src/components/Intro.js","webpack:///./src/pages/index.js","webpack:///./src/core/Divider.js","webpack:///./src/components/AnimatedText.js","webpack:///./src/components/Bio.js"],"names":["Content","styled","div","withConfig","displayName","componentId","ContentInner","shine","Caption","p","Text","Intro","react_default","a","createElement","className","Page","_ref","offset","gradient","children","Fragment","addons","speed","PageContent","_ref2","caption","first","second","style","fontSize","App","scroll","to","_this","refs","parallax","scrollTo","render","ref","pages","vertical","pages_Page","Bio","components_Intro","pages_PageContent","React","Component","Divider","__webpack_require__","hr","AnimatedText","Section","posed","section","enter","beforeChildren","staggerChildren","StyledName","StyledSubtitle","bioQuery","gatsby_browser_entry","query","data","_data$site$siteMetada","site","siteMetadata","author","role","initialPose","pose","_2540172409"],"mappings":"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","file":"component---src-pages-index-js-c6852f06e400d642aa0d.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { shine } from \"../core/Effect\";\nimport Divider from \"../core/Divider\";\n\nconst Content = styled.div``;\nconst ContentInner = styled.div`\n  margin: 20px;\n\n  @media all and (min-width: 600px) {\n    max-width: 60%;\n  }\n  :hover {\n    opacity: 1;\n    mask-image: linear-gradient(\n      -75deg,\n      rgba(0, 0, 0, 0.6) 30%,\n      #000 50%,\n      rgba(0, 0, 0, 0.6) 70%\n    );\n    mask-size: 200%;\n    animation: ${shine} 1.5s infinite;\n  }\n`;\nconst Caption = styled.p`\n  margin: 0;\n`;\nconst Text = styled.p`\n  font-size: 0.3em;\n  margin-top: 1.4rem;\n\n  @media all and (max-width: 600px) {\n    font-size: 13px;\n  }\n`;\nfunction Intro() {\n  return (\n    <Content>\n      <ContentInner>\n        <Caption>About Me</Caption>\n        <div className={`stripe pink`} />\n        <Text>\n          Specializing in software design and development, broad range knowledge\n          of different technology stacks, accomplished in object-oriented\n          programming and software development lifecycle. I am also well versed\n          in user experience design and have proven ability to work effectively\n          as part of a team and individually.\n        </Text>\n      </ContentInner>\n    </Content>\n  );\n}\n\nexport default Intro;\n","import React from \"react\";\nimport { Parallax, ParallaxLayer } from \"react-spring/addons\";\nimport Bio from \"../components/Bio\";\nimport Intro from \"../components/Intro\";\nimport Layout from \"../components/Layout\";\n\nconst Page = ({ offset, gradient, children }) => {\n  return (\n    <React.Fragment>\n      <ParallaxLayer offset={offset} speed={0.2}>\n        <div className=\"slopeBegin\" />\n      </ParallaxLayer>\n\n      <ParallaxLayer offset={offset} speed={-0.2}>\n        <div className={`slopeEnd ${gradient}`} />\n      </ParallaxLayer>\n\n      <ParallaxLayer className=\"text number\" offset={offset} speed={0.3}>\n        <span>0{offset + 1}</span>\n      </ParallaxLayer>\n\n      <ParallaxLayer className=\"text header\" offset={offset} speed={0.4}>\n        {children}\n      </ParallaxLayer>\n    </React.Fragment>\n  );\n};\nconst PageContent = ({ caption, first, second, gradient }) => (\n  <span>\n    <p style={{ fontSize: 20 }}>{caption}</p>\n    <div className={`stripe ${gradient}`} />\n    <p>{first}</p>\n    <p>{second}</p>\n  </span>\n);\nconst url = (name, wrap = false) =>\n  `${\n    wrap ? \"url(\" : \"\"\n  }https://awv3node-homepage.surge.sh/build/assets/${name}.svg${\n    wrap ? \")\" : \"\"\n  }`;\nexport default class App extends React.Component {\n  scroll = to => this.refs.parallax.scrollTo(to);\n  render() {\n    return (\n      <React.Fragment>\n        <Parallax className=\"container\" ref=\"parallax\" pages={3} vertical>\n          <Page offset={0} gradient=\"pink\">\n            <Bio />\n          </Page>\n\n          <Page offset={1} gradient=\"teal\">\n            <Intro />\n          </Page>\n          <Page offset={2} gradient=\"tomato\">\n            <PageContent\n              gradient=\"teal\"\n              caption=\"Skills\"\n              first=\"consectetur\"\n              second=\"adipiscing elit\"\n            />\n          </Page>\n        </Parallax>\n      </React.Fragment>\n    );\n  }\n}\n","import styled from \"styled-components\";\n\nconst Divider = styled.hr`\n  font-size: 24px;\n`;\nexport default Divider;\n","import React from \"react\";\nimport SplitText from \"react-pose-text\";\n\nconst charPoses = {\n  exit: { opacity: 0 },\n  enter: { opacity: 1 },\n  hover: {\n    y: 0,\n    transition: ({ charInWordIndex }) => ({\n      type: \"spring\",\n      velocity: 100 * Math.sin(1 + charInWordIndex),\n      damping: 0\n    })\n  }\n};\nconst wordPoses = {\n  hoverable: true\n};\nfunction AnimatedText({ text }) {\n  return (\n    <React.Fragment>\n      <SplitText wordPoses={wordPoses} charPoses={charPoses}>\n        {text}\n      </SplitText>\n    </React.Fragment>\n  );\n}\n\nexport default AnimatedText;\n","import React from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport styled from \"styled-components\";\nimport { shine } from \"../core/Effect\";\nimport posed, { PoseGroup } from \"react-pose\";\nimport Divider from \"../core/Divider\";\nimport AnimatedText from \"./AnimatedText\";\nimport SplitText from \"react-pose-text\";\n\nconst Section = posed.section({\n  enter: {\n    beforeChildren: true,\n    staggerChildren: 50\n  }\n});\n\nconst charPoses = {\n  exit: { opacity: 0 },\n  enter: { opacity: 1 }\n};\n\nconst ContentInner = styled.div`\n  // :hover {\n  //   opacity: 1;\n  //   mask-image: linear-gradient(\n  //     -75deg,\n  //     rgba(0, 0, 0, 0.6) 30%,\n  //     #000 50%,\n  //     rgba(0, 0, 0, 0.6) 70%\n  //   );\n  //   mask-size: 200%;\n  //   animation: ${shine} 1.5s infinite;\n  // }\n`;\nconst StyledName = styled.div`\n  margin: 0;\n`;\nconst StyledSubtitle = styled.div`\n  font-size: 0.5em;\n`;\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, role } = data.site.siteMetadata;\n\n        return (\n          <div>\n            <ContentInner>\n              <Section initialPose=\"exit\" pose=\"enter\">\n                <StyledSubtitle>Hello, I am</StyledSubtitle>\n                <StyledName>{author}</StyledName>\n                <StyledSubtitle>{role}</StyledSubtitle>\n              </Section>\n            </ContentInner>\n            <Divider className=\"stripe teal\" />\n          </div>\n        );\n      }}\n    />\n  );\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        role\n        social {\n          linkedin\n          github\n        }\n      }\n    }\n  }\n`;\n\nexport default Bio;\n"],"sourceRoot":""}